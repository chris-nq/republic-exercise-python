#!.venv/bin/python

import click
from prettytable import from_csv
from prettytable.colortable import ColorTable, Theme

from planetary_archive import PlanetaryArchive
from planetary_scanner import PlanetaryScanner


@click.command()
@click.argument("terrain", nargs=-1, required=False)
@click.option("--data-dir", "-d", default="./data", help="Data directory path")
@click.option("--throttle", default=0.0, help="Throttle in seconds")
@click.option("--display-table", "-t", is_flag=True, help="Display output as table")
def scanplanets(terrain, data_dir, throttle, display_table):
    if not terrain:
        click.echo("No terrain specified, generating for all terrains")
    click.echo(
        f"Generating CSV for terrains: {', '.join(terrain) if terrain else 'all'}"
    )
    archive = PlanetaryArchive(data_dir)
    scanner = PlanetaryScanner()
    scanner.scan(terrain, archive, throttle=throttle)
    click.echo(f"Generated CSV at {scanner.filename}")
    if display_table:
        with open(scanner.filename, "r") as csvfile:
            pt = from_csv(csvfile)
        color_table = ColorTable(
            theme=Theme(
                default_color="37",
                vertical_color="33;41",
                horizontal_color="33;41",
                junction_color="33;41",
            )
        )
        color_table.field_names = pt.field_names
        color_table.add_rows(pt._rows)
        del pt
        color_table.align = "l"
        print(color_table)


if __name__ == "__main__":
    scanplanets()
